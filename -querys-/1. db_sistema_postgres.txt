--BASE DE DATOS SISTEMA AUDITORIA-LOT

create table usuario
(
	id int not null primary key,
	rol varchar (100) not null,
	nombres varchar(250) not null,
	correo varchar (250) not null,
	clave varchar (32) not null,
	estado varchar (12) not null,
	firma varchar(300)
);

create table empresa
(
	id int not null primary key,
	razon_social varchar(150) not null,
	ruc varchar(11) not null,
	rep_legal varchar(250),
	correo varchar(150),
	pais varchar(20),
	direccion varchar(200) not null,
	multisitio int,
	num_trabajadores int,
	turno varchar(100),
	telefono varchar(50),
	alcance varchar(2000),
	justi_exclusion varchar(3000),
	gerente_general varchar (250),
	persona_contacto varchar (250),
	estado varchar(12)
);

create table tipo_norma
(
	id int primary key not null,
	nombre varchar(150) not null,
	descripcion varchar(250) not null
);	

create table evaluacion
(
	id int primary key not null,
	num_expediente varchar(15),
	fecha varchar(50) not null,
	estado varchar(12) not null
);

create table  tipo_auditoria
(
	id int primary key not null,
	nombre varchar(100) not null
);

create table auditoria
(
	id int primary key not null,
	id_expediente_empresa int not null references Expediente_empresa,
	id_tipo_auditoria int not null references Tipo_auditoria,
	id_auditor_lider int not null references Usuario,
	fecha varchar(50) not null,
	codigo_nace varchar(20) not null,
	criterios varchar(3000),
	objetivos varchar(3000),
	auditores varchar(1500),
	auditores_practicantes varchar(1500),
	expertos_tecnicos varchar(1500),
	observadores varchar(1500),
	resumen_procesos varchar(3000),
	fecha_entrega_informe varchar(50),
	num_informe varchar(20),
	descripcion varchar(1500), 
	estado varchar(12)
);

/* Tabla que podría crearse, aunque habría redundancia.
create table disposicion_final_auditoria
(
	id int primary key not null,
	id_auditoria int not null references Auditoria,
	disposicion varchar(3000),
	fila int
);
*/

create table auditoria_tipo_norma
(
	id int primary key not null,
	id_auditoria int not null references Auditoria,
	id_tipo_norma int not null references Tipo_norma
);

/*Registro de usuarios que acceden a Auditoría*/
create table acceso_auditoria
(
	id int primary key not null,
	id_auditoria int not null,
	id_usuario int not null,
	fecha varchar(32),
	FOREIGN KEY(id_auditoria) REFERENCES Audioria(id),
	FOREIGN KEY(id_usuario) REFERENCES Usuario(id)
);


/*Registro de usuarios que acceden a evaluación.*/
create table acceso_evaluacion
(
	id int primary key not null,
	id_evaluacion int not null ,
	id_usuario int not null,
	fecha varchar(32),
	FOREIGN KEY(id_evaluacion) REFERENCES Evaluacion (id),
	FOREIGN KEY(id_usuario) REFERENCES Usuario (id)
);

create table relacion_participante_auditoria
(
	id int primary key not null,
	id_auditoria int not null references Auditoria,
	nombre_completo varchar(250) not null,
	departamento varchar(100) not null
);

create table tipo_estandar_auditoria
(
	id int primary key not null,
	apartado_general varchar(3000),
	apartado_especifico varchar (3000),
	requisito varchar(3000),
	info_documentada varchar(3000),
	pregunta varchar(3000)
);

create table estandar_auditoria_check_list
(
	id int primary key not null,
	id_tipo_estandar_auditoria int references tipo_estandar_auditoria,
	id_auditoria int not null references Auditoria,
	hora varchar(30),
	auditado varchar(3000),
	proceso varchar(3000), 
	magnitud varchar(3000),	
	descripcion varchar(3000),
	evidencia varchar(3000),
	conforme varchar(100),
	no_conforme varchar(3000),
	nivel_nc varchar(12),
	tipo_norma int not null references Tipo_norma,
	fila int,
	hora_modificacion timestamp,
	id_usuario_modifica int references Usuario
);

create table estandar_auditoria_temporal
(
	id int primary key not null,
	id_estandar_auditoria int references estandar_auditoria_check_list,
	nombre_columna varchar(100),
	valor_columna varchar(3000),
	hora_modificacion timestamp,
	id_usuario_modifica int references Usuario	
);

create table fase
--Comprende las diferentes fases que existen. FASE 1, 2, seguimiento, disposicion final, etc.
(
	id int primary key not null,
	fase varchar(100) not null, --Fase 1
	descripcion varchar(300) --Esta fase comprende el inicio de la auditoría
);

create table conclusion_fase_auditoria
(
	id_auditoria int references Auditoria,
	id_fase int references Fase,
	descripcion varchar(3000), --En la fila 1, la recomendación es...
	conclusion varchar(3000), --Todo ok con la fila 1
	fila int,	--Enumera la cantidad de registros.
	primary key(id_auditoria, id_fase, fila)
);

create table pac_detalle
(
	id int primary key not null,
	detalle varchar(150) not null --Detalle de NC, Corrección, causas, etc...
);

create table pac_campo
(
	id int primary key not null, --11, 12, 13, 14, 15, 16
	campo varchar(200) not null,--1.1 área, doc_ref, estándar, edicion, etc...
	id_pac_detalle int references Pac_detalle --1, 2, 3, 4, 5, 6 
);

create table pac
(
	id int primary key not null, 
	id_estandar_check_list int references estandar_auditoria_check_list,
	id_pac_campo int references pac_campo, --11, 12, 13, 14, 15, 16
	valor varchar(2000), --Para el Campo 11: ÁREA DE VENTAS / 12: Doc.Ref XYZ
	fila int
);

create table expediente_empresa
(
	id int primary key not null,
	id_empresa int not null references Empresa, --¿De qué empresa será el expediente?
	id_evaluacion int not null references Evaluacion
);	

create table detalle_expediente(
	id int primary key not null,
	id_expediente_empresa int references Expediente_empresa,
	expediente varchar(50),  --Cuestionario, cotización/contrato, programa de auditoría, etc.
	documento varchar(255)  --Ruta a guardar.
)